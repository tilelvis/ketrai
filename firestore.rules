rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
        return getRole() == 'admin';
    }

    // Users Collection
    match /users/{userId} {
      // Any authenticated user can create their own profile (on signup)
      allow create: if isAuth();
      // Only the user or an admin can read the profile
      allow read: if isAuth() && (isOwner(userId) || isAdmin());
      // Only the user or an admin can update the profile
      allow update: if isAuth() && (isOwner(userId) || isAdmin());
      // No one can delete a user profile through the client
      allow delete: if false;

      // Notifications Sub-collection
      match /notifications/{notificationId} {
        // Only the profile owner can interact with their notifications
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Claims Collection
    match /claims/{claimId} {
      // Dispatcher, Support, and Claims Officers can create claims
      allow create: if isAuth() && getRole() in ['dispatcher', 'support', 'claims'];

      // User can read their own claims, specific roles can read all
      allow read: if isAuth() && (
        isOwner(resource.data.requesterId) || getRole() in ['claims', 'manager', 'admin']
      );
      
      // Admins and Claims Officers can update claims (approve/reject)
      allow update: if isAuth() && getRole() in ['admin', 'claims'];
      
      // No one can delete a claim
      allow delete: if false;

      // Claim History Sub-collection (append-only)
      match /history/{historyId} {
        allow create: if isAuth() && getRole() in ['admin', 'claims'];
        allow read: if isAuth() && getRole() in ['admin', 'claims', 'manager'];
        allow update, delete: if false;
      }
    }

    // Invites Collection (Admin only)
    match /invites/{inviteId} {
        // Admins can create/manage invites
        allow read, write, create, delete: if isAuth() && isAdmin();
        // Public can read a single invite to accept it
        allow get: if !isAuth();
    }
    
    // Audit Logs Collection (Immutable, append-only)
    match /auditLogs/{logId} {
      // Any authenticated user action can trigger a log creation
      allow create: if isAuth(); 
      // Only admins can read audit logs
      allow list, get: if isAuth() && isAdmin();
      // Logs are immutable, no updates or deletes allowed
      allow update, delete: if false;
    }
  }
}
