
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // User profile + preferences
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      match /alerts/{alertId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Invites can be read if the token matches, and created by anyone (for signup)
    match /invites/{inviteId} {
      allow read: if request.auth == null; // Allows unauthenticated users to read for token verification
      allow create: if request.auth != null && request.auth.token.admin == true;
      allow update(diff): if request.auth != null && diff.size() == 1 && diff.affectedKeys().hasOnly(['status']);
    }

    // Notifications - users can only read their own, and they are created server-side (via admin/claim flow)
    match /notifications/{notificationId} {
        allow read, delete: if request.auth != null && request.auth.uid == resource.data.uid;
        allow create: if request.auth != null; // Let server-side logic (flows) create them
    }

    // Claims - can be created by authenticated users, but only read by specific roles or the creator
    match /claims/{claimId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.requesterId || request.auth.token.role in ['admin', 'claims', 'manager']);
        allow create: if request.auth != null;
        allow update: if request.auth != null && request.auth.token.role in ['admin', 'claims'];
    }

    // Organizations - only members can read, only admins can write
    match /organizations/{orgId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.members;
      allow write: if request.auth != null &&
                    resource.data.roles[request.auth.uid] == "admin";
    }

    // Global data settings - read-only for all authenticated users
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if false; // only via Cloud Functions
    }

    // Admin-only settings
    match /admin/{docId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
