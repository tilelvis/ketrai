rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to get user's role
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // USERS: Users can read their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read: if request.auth.uid == userId 
                  || getRole() == 'admin';
      allow write: if request.auth.uid == userId;
    }
    
    // INVITES: Logged-in users can read invites (for token verification). Admins can create/update.
    match /invites/{inviteId} {
      allow read: if request.auth != null;
      allow create, update: if getRole() == 'admin';
    }

    // CLAIMS:
    match /claims/{claimId} {
      // CREATE: dispatcher, support, and claims can create claims
      allow create: if getRole() in ['dispatcher', 'support', 'claims'];
      
      // READ: Users can read their own claims. claims, manager, and admin can read any claim.
      allow get: if request.auth.uid == resource.data.requesterId
                 || getRole() in ['claims', 'manager', 'admin'];

      // LIST: claims, manager, and admin can list claims for queues/history
      allow list: if getRole() in ['claims', 'manager', 'admin'];
      
      // UPDATE: Only claims officers and admins can update claims (approve/reject).
      allow update: if getRole() in ['claims', 'admin'];
      
      // DELETE: No one can delete claims.
      allow delete: if false;
    }
    
    // CLAIMS HISTORY: Append-only for claims officers and admins. Read-only for managers.
    match /claims/{claimId}/history/{historyId} {
        allow create: if getRole() in ['claims', 'admin'];
        allow read: if getRole() in ['claims', 'manager', 'admin'];
        allow update, delete: if false;
    }

    // NOTIFICATIONS: Users can only access their own notifications.
    match /users/{userId}/notifications/{notificationId} {
      allow list, read, create, delete: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId; // To mark as read
    }

    // AUDIT LOGS: Append-only for all authenticated users. No one can update or delete.
    match /auditLogs/{logId} {
      allow create: if request.auth != null;
      allow read: if getRole() == 'admin';
      allow update, delete: if false;
    }
  }
}
